ggplot2::scale_y_continuous(expand = c(0, 0))
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep("S[", opchar$des$J),
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
plots$stopping  <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
plots$stopping
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(italic(S), "[", opchar$des$J),
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(expression(italic(S)), "[", opchar$des$J),
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
plots$stopping  <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
plots$stopping
expression(italic(S))
int_tibble$key2
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(expression(italic(S)),
"[", opchar$des$J,
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
plots$stopping  <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
##### Outputting #############################################################
if (output) {
output <- list(plot_opchar = plot_opchar, opchar = opchar)
return(output)
}
}
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(paste0(expression(italic(S)), "["),
opchar$des$J),
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
int_tibble$key2
plots$stopping  <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
plots$stopping
int_tibble            <- tidyr::gather(opchar$opchar, "key", "value",
6:(5 + 2*opchar$des$J))
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(c(paste0(expression(italic("E")), "["),
paste0(expression(italic("F")), "[")),
each = opchar$des$J),
rep(1:opchar$des$J, 2), "]"),
each = nrow(opchar$opchar)))
int_tibble$key2
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(c(paste0(expression(italic(E)), "["),
paste0(expression(italic(F)), "[")),
each = opchar$des$J),
rep(1:opchar$des$J, 2), "]"),
each = nrow(opchar$opchar)))
int_tibble$key2
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0)) +
ggthemes::scale_fill_ptol()
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(values = cbPalette,
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(pallete = cbPalette,
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_discrete(pallete = "cbPalette",
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
?scale_fill_discrete
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(pallete = "cbPalette",
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(palette = "cbPalette",
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(palette = cbPalette,
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
??cbPalette
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(palette = c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7"),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(colors = c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7"),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_hue(colours = c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7"),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(colours = c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7"),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
?scale_fill_manual
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(values = c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7"),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(values = rev(c("#999999", "#E69F00", "#56B4E9",
"#009E73", "#F0E442", "#0072B2",
"#D55E00", "#CC79A7")),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
ggthemes::ptol_pal(2*opchar$des$J)
?show_col
scales::show_col(ggthemes::ptol_pal()(2*opchar$des$J))
ggthemes::ptol_pal()(2*opchar$des$J)
ggthemes::ptol_pal()(6)
ggthemes::ptol_pal()(9)
sho_col(ggthemes::ptol_pal()(9))
show_col(ggthemes::ptol_pal()(9))
scales::show_col(ggthemes::ptol_pal()(9))
int_tibble            <- tidyr::gather(opchar$opchar, "key", "value",
(6 + 2*opchar$des$J):
(5 + 3*opchar$des$J))
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(paste0(expression(italic(S)), "["),
opchar$des$J),
1:opchar$des$J, "]"),
each = nrow(opchar$opchar)))
plots$stopping  <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(values = ggthemes::ptol_pal()(2*opchar$des$J),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0)) +
ggthemes::scale_fill_ptol()
ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value,
fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(values = ggthemes::ptol_pal()(2*opchar$des$J),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
int_tibble            <- tidyr::gather(opchar$opchar, "key", "value",
6:(5 + 2*opchar$des$J))
int_tibble            <-
dplyr::mutate(int_tibble,
key2 = rep(paste0(rep(c(paste0(expression(italic(E)), "["),
paste0(expression(italic(F)), "[")),
each = opchar$des$J),
rep(1:opchar$des$J, 2), "]"),
each = nrow(opchar$opchar)))
plots$rejection <- ggplot2::ggplot(int_tibble,
ggplot2::aes(tau, value, fill = key2)) +
ggplot2::geom_area() +
ggplot2::xlab(expression(tau)) +
ggplot2::ylab("Stopping probability") +
ggplot2::theme_bw() +
ggplot2::theme(legend.position = "bottom",
legend.title    = ggplot2::element_blank()) +
ggplot2::scale_fill_manual(values = ggthemes::ptol_pal()(2*opchar$des$J),
labels = scales::parse_format()) +
ggplot2::scale_x_continuous(expand = c(0, 0),
limits = c(min(opchar$tau),
max(opchar$tau))) +
ggplot2::scale_y_continuous(expand = c(0, 0))
plots$rejection
devtools::document()
library(OptGS)
des <- des_gs()
opchar <- opchar(des)
opchar$opchar
library(OptGS)
opchar <- opchar(des)
opchar$opchar
plot(opchar)
library(OptGS)
plot(opchar)
?set.seed
library(OptGS)
devtools::document()
?OptGS
??OptGS
?des_gs
devtools::document()
library(OptGS)
?des_gs
?ggplot2
?des_gs
des <- des_nearopt(J=3)
system.time(des <- des_nearopt(J=3))
system.time(des <- des_nearopt(J=4))
des1 <- des_nearopt(J=2)
des2 <- des_nearopt(J=2,ratio=2)
des3 <- des_nearopt(J=2,sigma0=2,sigma1=3,ratio=0.5)
des1$Delta
des2$Delta
des3$Delta
shiny::runApp('inst/shiny/OptGS')
citation("OptGS")
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
test <- des_gs(type="wang_tsiatis")
test <- des_gs(shape="wang_tsiatis")
test$e
test <- des_gs(shape="wang_tsiatis",Delta=4)
test <- des_gs(shape="wang_tsiatis",Delta=1)
test <- des_gs(shape="wang_tsiatis",Delta=0.9999)
test$e
test$f
test <- des_gs(shape="wang_tsiatis",Delta=-5)
test$f
test$e
library(OptGS)
test <- des_gs(shape="wang_tsiatis",Delta=5)
test$e
test$f
test <- des_gs(shape="power_family",Delta=5)
test <- des_gs(shape="power_family",Delta=1)
test <- des_gs(shape="power_family",Delta=0.9)
test$e
test$f
test <- des_gs(shape="power_family",Delta=0.99)
test$f
test$e
test <- des_gs(shape="power_family",Delta=-2)
test$e
test$f
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
test <- des_gs()
test$opchar
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
test <- des_nearopt()
opchar <- opchar(test, tau=seq(-0.2,0.4,length.out=100))
plot(opchar)
plots <- plot(opchar,output=T)
plots$plots$`MSS(tau)`
runApp('inst/shiny/OptGS')
test <- plot(test)
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
test <- des_gs()
runApp('~/Documents/Work/Software packages/multiarm/inst/shiny/multiarm')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
test <- des_gs()
test$shape
test <- des_nearopt()
test$shape
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
runApp('inst/shiny/OptGS')
